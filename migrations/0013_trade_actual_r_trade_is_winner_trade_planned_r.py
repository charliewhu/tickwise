# Generated by Django 5.1.1 on 2024-10-06 18:10

import django.db.models.expressions
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0012_alter_trade_exited_at"),
    ]

    operations = [
        migrations.AddField(
            model_name="trade",
            name="actual_r",
            field=models.GeneratedField(
                db_persist=False,
                expression=models.Case(
                    models.When(
                        models.Q(("long_short_flag__exact", "LONG")),
                        then=django.db.models.expressions.CombinedExpression(
                            django.db.models.expressions.CombinedExpression(
                                models.F("exit_price"), "-", models.F("entry_price")
                            ),
                            "/",
                            django.db.models.expressions.CombinedExpression(
                                models.F("entry_price"), "-", models.F("stop_price")
                            ),
                        ),
                    ),
                    models.When(
                        models.Q(("long_short_flag__exact", "SHORT")),
                        then=django.db.models.expressions.CombinedExpression(
                            django.db.models.expressions.CombinedExpression(
                                models.F("entry_price"), "-", models.F("exit_price")
                            ),
                            "/",
                            django.db.models.expressions.CombinedExpression(
                                models.F("stop_price"), "-", models.F("entry_price")
                            ),
                        ),
                    ),
                    default=0,
                    output_field=models.DecimalField(
                        decimal_places=2, max_digits=4, null=True
                    ),
                ),
                output_field=models.DecimalField(
                    decimal_places=2, max_digits=4, null=True
                ),
            ),
        ),
        migrations.AddField(
            model_name="trade",
            name="is_winner",
            field=models.GeneratedField(
                db_persist=False,
                expression=models.Case(
                    models.When(
                        models.Q(("long_short_flag__exact", "LONG")),
                        then=models.Q(("exit_price__gt", models.F("entry_price"))),
                    ),
                    models.When(
                        models.Q(("long_short_flag__exact", "SHORT")),
                        then=models.Q(("exit_price__lt", models.F("entry_price"))),
                    ),
                    default=None,
                    output_field=models.BooleanField(),
                ),
                output_field=models.BooleanField(),
            ),
        ),
        migrations.AddField(
            model_name="trade",
            name="planned_r",
            field=models.GeneratedField(
                db_persist=False,
                expression=models.Case(
                    models.When(
                        models.Q(("long_short_flag__exact", "LONG")),
                        then=django.db.models.expressions.CombinedExpression(
                            django.db.models.expressions.CombinedExpression(
                                models.F("target_price"), "-", models.F("entry_price")
                            ),
                            "/",
                            django.db.models.expressions.CombinedExpression(
                                models.F("entry_price"), "-", models.F("stop_price")
                            ),
                        ),
                    ),
                    models.When(
                        models.Q(("long_short_flag__exact", "SHORT")),
                        then=django.db.models.expressions.CombinedExpression(
                            django.db.models.expressions.CombinedExpression(
                                models.F("entry_price"), "-", models.F("target_price")
                            ),
                            "/",
                            django.db.models.expressions.CombinedExpression(
                                models.F("stop_price"), "-", models.F("entry_price")
                            ),
                        ),
                    ),
                    default=None,
                    output_field=models.BooleanField(),
                ),
                output_field=models.DecimalField(
                    decimal_places=2, max_digits=4, null=True
                ),
            ),
        ),
    ]
